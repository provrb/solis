searchState.loadedDescShard("solis", 0, "This packet details car damage parameters for all the cars …\nThis packet details the car setups for each vehicle in the …\nTelemetry for all the cars in the race.\nThis packet gives details of events that happen during the …\nThis packet details the final classification at the end of …\nEvery packet will have the following header.\nThe lap data packet gives details of all the cars in the …\nThis packet details the players currently in a multiplayer …\nPhysics data for all the cars being driven.\nThis is a list of participants in the race.\nThis packet contains lap times and tyre usage for the …\nA generic enum representing all possible F1 telemetry …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIdentifier for the packet type, see below\nAttempt to create a TelemetryPacket from a buffer\nIndex of secondary player’s car in the array …")